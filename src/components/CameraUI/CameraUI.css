/* --- UI Overlay Container --- */
.ui-overlay {
  position: absolute; /* ยึดกับ .ar-overlay */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: auto;
  opacity: 1;
  transition: opacity 0.5s ease-in-out;
}

/* --- Camera Controls --- */
.camera-controls {
  position: absolute;
  width: 100%;
  bottom: 0;

  /* 
   * 2. ใช้ padding ในการเว้นระยะขอบจอ แทน max-width
   *    - padding: 0 calc(50% - 150px); 
   *      เป็นเทคนิคที่จะเว้นระยะให้ปุ่มซ้ายสุดและขวาสุดอยู่ห่างกันไม่เกิน 300px
   *      แต่จะยืดหยุ่นบนจอที่แคบกว่า
   *    - หรือใช้วิธีที่ง่ายกว่าคือ padding: 0 5%;
   */
  padding: 0% 8% 16% 8%; /* เว้นระยะขอบซ้าย-ขวา 5% ของความกว้างจอ */
  box-sizing: border-box; /* สำคัญมาก! */
  z-index: 99;
  display: flex;
  justify-content: space-between; /* ผลักปุ่มซ้าย-ขวาไปสุดขอบ และปุ่มกลางอยู่ตรงกลาง */
  align-items: center;
}

/* --- สลับกล้องหน้า - หลัง --- */
.action-button {
  width: clamp(36px, 8vw, 44px);
  height: clamp(36px, 8vw, 44px);
  border: none;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0; /* เอา padding เริ่มต้นออก */
}

/* 
 * สไตล์สำหรับ <img> ที่เป็นไอคอนในปุ่ม
 */
.action-icon {
  width: 100%; /* ทำให้ไอคอนมีขนาดพอดีกับปุ่ม */
  height: 100%;
  object-fit: contain;

  /* 
     * กำหนด Transition สำหรับการหมุน
     * ทำให้การหมุนเกิดขึ้นอย่างนุ่มนวล
    */
  transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

/* 
 * เมื่อไอคอนมี class 'flipping' (ตอนเป็นกล้องหลัง)
 * ให้ทำการหมุน 180 องศารอบแกน Y
 */
.action-icon.flipping {
  transform: rotate(180deg);
}

/* === Photo Button (โหมดถ่ายภาพ) === */
.photo-button {
  width: 72px;
  height: 72px;
  border-radius: 50%;
  border: 4px solid white;
  padding: 3px;
  cursor: pointer;
  background-color: transparent;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: transform 0.1s ease-in-out;
}

/* 2. ทำให้ปุ่มยุบเมื่อกด */
.photo-button:active {
  transform: scale(0.92);
}

.photo-button .circle {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: white;
}

/* === Record Button (โหมดวิดีโอ) === */
.record-button {
  width: 72px;
  height: 72px;
  border-radius: 50%;
  border: 4px solid white;
  cursor: pointer;
  background-color: transparent;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative; /* สำหรับ .ring */
  transition: transform 0.1s ease-in-out;
  overflow: hidden;
}

/* ทำให้ปุ่มยุบเมื่อกด */
.record-button:active {
  transform: scale(0.92);
}

/* รูปทรงด้านใน (เป็นวงกลมสีแดงตอนแรก) */
.record-button .inner-shape {
  width: 85%;
  height: 85%;
  border-radius: 50%;
  background-color: #ff3b30;
  transition: all 0.25s ease-in-out;
}

/* --- สไตล์เมื่อกำลังอัดวิดีโอ (recording) --- */

/* 4. เมื่อกดอัด inner-shape จะหดและเป็นสี่เหลี่ยม */
.record-button.recording {
  width: 72px;
  height: 72px;
  border-radius: 50%;
  border: 4px solid rgba(255, 255, 255, 0);
  cursor: pointer;
  background-color: transparent;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative; /* สำหรับ .ring */
  transition: transform 0.1s ease-in-out;
}

.record-button.recording .inner-shape {
  width: 40%;
  height: 40%;
  border-radius: 20%;
}

.record-button .ring {
  position: absolute;
  top: -3px;
  left: -3px;
  right: -3px;
  bottom: -3px;
  opacity: 0;
  pointer-events: none;
}

/* 5. เมื่อกดอัด วงแหวนจะปรากฏขึ้น */
.record-button.recording .ring {
  opacity: 1;
}

.record-button .ring .progress-ring {
  stroke-width: 2.5;
  stroke-dasharray: 94.247;
  stroke-dashoffset: 94.247;
}

/* 6. เมื่อกำลังอัด ให้เริ่มอนิเมชันเส้นวิ่ง */
.record-button.recording .ring .progress-ring {
  animation: dash-record 30s linear; /* ตั้งเวลาอัดสูงสุด 30 วิ */
  animation-fill-mode: forwards; /* ค้างไว้ที่เฟรมสุดท้าย */
}

@keyframes dash-record {
  from {
    stroke-dashoffset: 94.247;
  }
  to {
    stroke-dashoffset: 0;
  }
}
/* === Switch Button Mode (จากโค้ดเก่า) === */
.switch-button {
  width: clamp(44px, 12vw, 52px);
  height: clamp(44px, 12vw, 52px);
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
}
.switch-button label {
  position: relative;
  display: inline-block;
  width: 38px;
  height: 20px;
}
.switch-button input {
  opacity: 0;
  width: 0;
  height: 0;
}
.switch-button .slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(255, 255, 255, 0.3);
  transition: 0.4s;
  border-radius: 34px;
}
.switch-button .slider:before {
  position: absolute;
  content: "";
  height: 14px;
  width: 14px;
  left: 3px;
  bottom: 3px;
  background-color: white;
  transition: 0.4s;
  border-radius: 50%;
}
.switch-button .input:checked + .slider {
  background-color: #f5a623;
}
.switch-button .input:checked + .slider:before {
  transform: translateX(18px);
}

/* ซ่อนไอคอน SVG ไปก่อน เราใช้แค่ตัวสไลด์ */
.switch-button .camera,
.switch-button .video {
  display: none;
}

/* --- ✨ Style ใหม่สำหรับ Processing Overlay ✨ --- */
.processing-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.6);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  z-index: 100; /* อยู่เหนือ camera-controls */
  color: white;
  -webkit-backdrop-filter: blur(5px);
  backdrop-filter: blur(5px);
}

.processing-overlay .spinner {
  width: 48px;
  height: 48px;
  border: 4px solid rgba(255, 255, 255, 0.3);
  border-top-color: #fff;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

.processing-overlay p {
  margin-top: 16px;
  font-size: 1rem;
  font-weight: bold;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
